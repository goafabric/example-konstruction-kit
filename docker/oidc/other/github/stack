#!/bin/bash
source .values
export COMMAND=$1
export OPTION=$2

[[ "$(uname -m)" == "arm64" || "$(uname -m)" == "aarch64" ]] && export _Values_server_arch="-arm64v8"
export _Values_image_native="" && [[ "${OPTION}" = "-native" ]] && export _Values_image_native=-native${_Values_server_arch}
export _Values_nginx_oidc="" && docker ps | grep oauth2-proxy > /dev/null && export _Values_nginx_oidc="_oidc"
docker ps | grep loki > /dev/null && LOKI_COMPOSE="-f ./templates/docker-compose-loki.yml"

function func_compose {
    echo Going $1 ...
    docker-compose -p ${_Values_root_name} -f ./templates/docker-compose.yml $LOKI_COMPOSE --env-file .values $1 $2 $3 $4 $5
}

if [ "${COMMAND}" = "up" ]
then
    func_compose up -d
elif [ "${COMMAND}" = "down" ]
then
    func_compose down
elif [ "${COMMAND}" = "restart" ]
then
    func_compose down
    func_compose up -d
elif [ "${COMMAND}" = "pull" ]
then
    func_compose down
    func_compose pull
elif [ "${COMMAND}" = "build" ]
then
    func_compose build
elif [ "${COMMAND}" = "prune" ]
then
    func_compose down --volumes
elif [ "${COMMAND}" = "update" ]
then
    func_compose down --volumes
    func_compose pull
    func_compose up -d
else
    echo Doing nothing !
fi

#function github-proxy {
#docker run --name auth2-proxy --rm -p4180:4180 quay.io/oauth2-proxy/oauth2-proxy:v7.4.0 \
#--email-domain='*' --upstream=file:///dev/null --http-address=0.0.0.0:4180 --set-xauthrequest=true --provider=github --skip-provider-button=true --scope="user:email" \
#--client-id=028cf7cd4281313938a0 --client-secret=2d79fbf8d9a4f1c0861fc8aa5b41d835d760212b  --cookie-secret=SvJIUgqBKxOYSxJwFREiOg== --redirect-url=http://localhost:8080/oauth2/callback
#}
