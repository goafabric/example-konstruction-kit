#!/bin/bash
source .values
export COMMAND=$1
export _Values_image_native=$2

[[ "$(uname -m)" == "arm64" || "$(uname -m)" == "aarch64" ]] && export _Values_server_arch="-arm64v8"

function create-user {
    baseurl=$1
    realm=$2
    user=$3

    echo retrieving access token ..

    export access_token=$(\
    curl -v -s -X POST $baseurl/oidc/realms/master/protocol/openid-connect/token \
    -d "client_id=admin-cli" \
    -d "username=admin" \
    -d "password=admin" \
    -d "grant_type=password" \
    | jq --raw-output '.access_token' \
    )
    echo access token is:
    echo $access_token

    echo creating user ...

    curl -X POST "$baseurl/oidc/admin/realms/$realm/users" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $access_token" \
    -d "{
    \"username\": \"$user\",
    \"email\": \"$user@example.com\",
    \"enabled\": true,
    \"credentials\": [{
    \"type\": \"$user\",
    \"value\": \"$user\",
    \"temporary\": false
    }]
    }"

    echo setting email verified ...

    export user_id=$(\
    curl -X GET "$baseurl/oidc/admin/realms/$realm/users/?username=$user" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $access_token" \
    | jq -r '.[0].id' \
    )
    echo userid is: $user_id

    curl -X PUT "$baseurl/oidc/admin/realms/$realm/users/$user_id" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $access_token" \
    -d '{"emailVerified":true}'
}

while ! docker logs keycloak-application 2>&1 | grep -q "started in"; do
  echo "waiting for keycloak to start .."
  sleep 2
done

baseurl=http://localhost:30200

create-user $baseurl tenant-0 user1
create-user $baseurl tenant-0 user2
create-user $baseurl tenant-5 user1
create-user $baseurl tenant-5 user2

