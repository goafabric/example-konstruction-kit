apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "application.fullname" . }}-config
  labels:
    {{- include "application.labels" . | nindent 4 }}
data:
  #application
  TZ: Europe/Berlin
  server.port: "{{ .Values.service.port }}"
  server.tomcat.threads.max: "20"
  server.forward-headers-strategy: FRAMEWORK

  server.max-http-request-header-size: "10KB" #required for Gateway OIDC
  server.tomcat.max-http-response-header-size: "10KB"

  #security
  security.authentication.enabled: "false"

  #monitoring
  management.endpoint.health.show-details: always
  management.endpoints.web.exposure.include: "health,circuitbreakers,prometheus"

  #tracing
  spring.application.name: "{{ include "application.fullname" . }}.{{ .Release.Namespace }}"
  management.otlp.tracing.endpoint: "http://tempo.grafana:4318/v1/traces"
  management.tracing.sampling.probability: "1.0"
  logging.level.io.opentelemetry: "INFO"

  #kafka
  spring.kafka.bootstrap-servers: "kafka:9092"
  spring.kafka.properties.security.protocol: "SASL_PLAINTEXT"
  spring.kafka.properties.sasl.mechanism: "PLAIN"
  spring.kafka.properties.sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${spring.kafka.username}" password="${spring.kafka.password}";

  spring.kafka.template.observation-enabled: "true"
  spring.kafka.listener.observation-enabled: "true"

  #spring.kafka.consumer.properties.partition.assignment.strategy: "org.apache.kafka.clients.consumer.RoundRobinAssignor"

  #nats
  nats.spring.server: "nats.event:4222"

  #profile
  spring.profiles.active: {{ .Values.dispatcher.profile }}