#!/bin/bash

function create-user {
    baseurl=$1
    realm=$2
    user=$3
    password=$4
    requiredActions=$5

    echo retrieving access token ..

    export access_token=$(\
    curl -v -s -X POST $baseurl/oidc/realms/master/protocol/openid-connect/token \
    -d "client_id=admin-cli" \
    -d "username=admin" \
    -d "password=admin" \
    -d "grant_type=password" \
    | jq --raw-output '.access_token' \
    )
    echo access token is:
    echo $access_token

    echo creating user ...

    curl -X POST "$baseurl/oidc/admin/realms/$realm/users" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $access_token" \
    -d "{
    \"username\": \"$user\",
    \"email\": \"$user@example.com\",
    \"enabled\": true,
    \"credentials\": [{
    \"type\": \"$user\",
    \"value\": \"$password\",
    \"temporary\": false
    }],
    \"requiredActions\": [\"$requiredActions\"]
    }"

    echo setting email verified ...

    export user_id=$(\
    curl -X GET "$baseurl/oidc/admin/realms/$realm/users/?username=$user" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $access_token" \
    | jq -r '.[0].id' \
    )
    echo userid is: $user_id

    curl -k -X PUT "$baseurl/oidc/admin/realms/$realm/users/$user_id" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $access_token" \
    -d '{"emailVerified":true}'
}

baseurl=https://`kubectl get configmaps cluster-config -o jsonpath='{.data.hostname}' -n default`

create-user $baseurl tenant-0 user1 User1user1
create-user $baseurl tenant-0 user2 User2user2
create-user $baseurl tenant-0 user3 User3user3 CONFIGURE_TOTP
create-user $baseurl tenant-5 user1 User1user1
create-user $baseurl tenant-5 user2 User1user1
create-user $baseurl tenant-5 user3 User3user3 webauthn-register



